/*== VortexHub Unified Boot v1.0 (compressed) ==*/
(function(g){const b={},C={CORE_FILES:["loader.js","manifest_global.json"],REGIONS:{EU:"https://cdn-eu.vortexhub.app/",ASIA:"https://cdn-asia.vortexhub.app/",SWISS:"https://cdn-swiss.vortexhub.app/",Fallback:"https://cdn.vortexhub.app/"},CHECKSUMS:{},TELEMETRY_API:["https://api-eu.vortexhub.app/telemetry","https://api-asia.vortexhub.app/telemetry"]},S=ms=>new Promise(r=>setTimeout(r,ms)),U=()=>crypto.randomUUID?.()||Date.now()+Math.random();b.envScanner=async()=>{const u=navigator.userAgent,p=u.includes("iPhone")?"iOS":u.includes("Android")?"Android":"Web",l=navigator.language||"en",br=(/Chrome|Safari|Edge|Firefox/i.exec(u)||["Unknown"])[0],m=navigator.deviceMemory||"N/A",c=navigator.hardwareConcurrency||"N/A";let gname="Unknown";try{const e=document.createElement("canvas"),t=e.getContext("webgl");gname=t&&t.getParameter(t.RENDERER)||"Unknown"}catch{}let bat={level:null};if(navigator.getBattery)try{bat=await navigator.getBattery()}catch{}const cs=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",pwa=window.matchMedia("(display-mode: standalone)").matches,o=navigator.onLine;return{platform:p,lang:l,browser:br,deviceMem:m,cpuThreads:c,gpu:gname,battery:bat.level,colorScheme:cs,pwa,online:o}};b.regionLatencyScan=async()=>{const r={};const f="latency_ping.txt?_="+Date.now();for(const [k,u] of Object.entries(C.REGIONS)){let t=[];for(let i=0;i<3;i++){const s=performance.now();try{await fetch(u+f,{cache:"no-store",mode:"no-cors"});t.push(performance.now()-s)}catch{t.push(3e3)}}r[k]=t}let best="Fallback",lat=1/0;Object.entries(r).forEach(([k,a])=>{const v=a.reduce((x,y)=>x+y,0)/a.length;if(Math.min(...a)>2500)return;if(v<lat){lat=v;best=k}});localStorage.setItem("best_node",best);navigator.sendBeacon?.(C.TELEMETRY_API[0],JSON.stringify({type:"latency-report",region:best,results:r}));return{node:best,results:r,avg:lat}};b.integrityCheck=async()=>{const m=[],t=[];for(let f of C.CORE_FILES){try{const r=await fetch(f,{cache:"no-store"});if(r.status!==200)throw 0;if(crypto.subtle&&C.CHECKSUMS[f]){const d=await r.arrayBuffer(),h=await crypto.subtle.digest("SHA-256",d),a=Array.from(new Uint8Array(h)).map(x=>x.toString(16).padStart(2,"0")).join("");if(a!==C.CHECKSUMS[f])t.push(f)}}catch{m.push(f)}}if(m.length||t.length){localStorage.setItem("vortex_integrity_alert",JSON.stringify({missing:m,tampered:t}));if(location.hostname.search(/vortexhub\.app$/i)<0)location.href="about:blank"}return{missing:m,tampered:t}};b.telemetry=(p)=>{p.bootId=U();p.platform=navigator.userAgent;p.timestamp=Date.now();p.region=localStorage.getItem("best_node");p.debug=location.search.includes("debug=true");C.TELEMETRY_API.forEach(u=>{try{navigator.sendBeacon(u,JSON.stringify(p))}catch{}})};b.cryptoHandshake=async()=>{const e=new TextEncoder(),s=crypto.getRandomValues?crypto.getRandomValues(new Uint8Array(8)):[],d=e.encode("vortexhub-handshake-"+Array.from(s).join("")),h=await crypto.subtle.digest("SHA-256",d);return{hash:h,ts:Date.now()}};b.logFile=[];const L=m=>{b.logFile.push("["+new Date().toISOString()+"] "+m);localStorage.setItem("boot_log",JSON.stringify(b.logFile))};b.aiMiniAssist={run:t=>{if(t.avgLatency&&t.avgLatency>1500)b.telemetry({type:"ai-warning",reason:"high_latency"},!0)}};b.fallbackWatchdog=()=>{setTimeout(()=>{if(!window.VORTEX_LAUNCHED)location.reload()},5e3)};b.pipelineRegister=()=>[{name:"runtime",path:"./runtime/core.js"},{name:"ai_core",path:"./intelligence/ai_core.js"},{name:"sync",path:"./sync/sync_agent.js"},{name:"telemetry",path:"./runtime/telemetry_logger.js"}];b.loadModules=async(M,r)=>{await Promise.all(M.map(m=>fetch(r+m.path,{cache:"force-cache"})));let ok=!1;for(let m of M){try{await import(r+m.path);ok=!0}catch{try{await import(C.REGIONS.Fallback+m.path)}catch{}}}return ok};b.launchSequence=async()=>{L("Launching main sequence...");let{node,avg}=await b.regionLatencyScan(),r=C.REGIONS[node]||C.REGIONS.Fallback,M=b.pipelineRegister(),o=await b.loadModules(M,r);if(!o)L("Module load failed, fallback retrying.");window.VORTEX_LAUNCHED=!0};(async()=>{L("Boot [VortexHub v2.0] Starting...");const e=await b.envScanner();await b.integrityCheck();await b.cryptoHandshake();const r=await b.regionLatencyScan();L("Env:"+JSON.stringify(e));L("Region:"+JSON.stringify(r));b.telemetry({type:"boot",success:!0,...e,...r});b.fallbackWatchdog();await b.launchSequence();L("Boot sequence completed.");try{if(location.search.includes("debug=true")){const a=new Blob([b.logFile.join("\n")],{type:"text/plain"});window.saveAs?.(a,"/dev/boot_log.txt")}}catch{}})();})(this);
/*== End VortexHub Unified Boot v1.0 ==*/
